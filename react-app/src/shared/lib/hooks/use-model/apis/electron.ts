/**
 * @module ElectronApi
 * API –∫–ª–∏–µ–Ω—Ç –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Electron IPC.
 */

import type { GenerateResponse, GenerateRequest } from '../types/electron';

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Electron API.
 * –ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç Electron IPC —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞.
 */
export class Electron {
  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ Electron IPC.
   * @param request - –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.
   * @param config - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è API.
   * @returns Promise —Å –ø–æ–ª–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º.
   */
  async generate(
    request: GenerateRequest & GenerateOptions,
    config?: ProviderSettings
  ): Promise<string> {
    if (!window.electron?.ollama) {
      throw new Error('‚ùå Electron API is unavailable');
    }

    console.log('üöÄ request', request);
    console.log('üöÄ config', config);

    return await window.electron.ollama.generate(request, config);
  }

  /**
   * –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Electron IPC.
   * @param callback - Callback –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ streaming –æ—Ç–≤–µ—Ç–æ–≤.
   * @returns –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏.
   */
  onGenerateProgress(
    callback: (progress: GenerateResponse) => void
  ): () => void {
    if (!window.electron?.ollama) {
      throw new Error('‚ùå Electron API is unavailable');
    }

    return window.electron.ollama.onGenerateProgress(callback);
  }
}

/**
 * –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä API –∫–ª–∏–µ–Ω—Ç–∞.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ API –≤–æ –≤—Å–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
 */
export const electron = new Electron();

export default electron;
